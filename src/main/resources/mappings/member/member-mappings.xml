<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">

	<resultMap type="member" id="member">
		<id property="member_no" column="MEMBER_NO" />
		<id property="member_id" column="MEMBER_ID" />
		<result property="member_pwd" column="MEMBER_PWD" />
		<result property="member_name" column="MEMBER_NAME" />
		<result property="member_phone" column="MEMBER_PHONE" />
		<result property="member_age" column="MEMBER_AGE" />
		<result property="member_email" column="MEMBER_EMAIL" />
		<result property="member_addr" column="MEMBER_ADDR" />
		<result property="member_key" column="MEMBER_KEY" />
		<result property="member_date" column="MEMBER_DATE" />
	</resultMap>

	<select id="checkID" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_ID=#{member_id}
	</select>

	<select id="checkMember" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_ID=#{member_id} AND MEMBER_PWD=#{member_pwd}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="member">
		<![CDATA[
		INSERT INTO MEMBER (
			MEMBER_NO,
			MEMBER_ID, 
			MEMBER_PWD, 
			MEMBER_NAME, 
			MEMBER_PHONE, 
			MEMBER_AGE, 
			MEMBER_EMAIL,
			MEMBER_ADDR,
			MEMBER_KEY,
			MEMBER_DATE
			
		) VALUES(
			MEMBER_SEQ.NEXTVAL, 
			#{member_id}, 
			#{member_pwd}, 
			#{member_name}, 
			#{member_phone},
			#{member_age},
			#{member_email},
			#{member_addr},
			#{member_key},
			sysdate
			
		)
		]]>
	</insert>
	<!-- 회원정보 수정 -->
	<update id="updateMember">
		UPDATE MEMBER
		SET
		MEMBER_PWD = #{member_pwd},
		MEMBER_NAME = #{member_name},
		MEMBER_PHONE = #{member_phone},
		MEMBER_EMAIL = #{member_email},
		MEMBER_ADDR = #{member_addr}
		WHERE
		MEMBER_ID = #{member_id}
	</update>

	<select id="login" resultMap="member">

		SELECT * FROM MEMBER
		WHERE
		MEMBER_ID=#{member_id} AND MEMBER_PWD=#{member_pwd}

	</select>


	<!-- 회원탈퇴 -->
	<delete id="dropMember">
		DELETE FROM MEMBER
		WHERE MEMBER_ID =#{member_id}
	</delete>
	<select id="forgotPWChkMember" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM
		MEMBER WHERE MEMBER_ID=#{member_id} AND MEMBER_NAME=#{member_name}
	</select>

	<update id="forgotPWUpdate">
		UPDATE MEMBER SET MEMBER_PWD=#{member_pwd} WHERE
		MEMBER_ID=#{member_id} AND MEMBER_NAME=#{member_name}
	</update>

	<!-- 구매 내역 조회 -->
	<select id="orderMember" resultType="goodspayment">
		SELECT GOODS_NUM,ORDER_DATE,
		MEMBER_ADDR, ORDER_PROCESS, ORDER_PAYMENT
		FROM GOODS_PAYMENT
		WHERE
		MEMBER_ID = #{member_id}
	</select>

	<!-- 굿즈 구매 갯수 -->
	<select id="CountOrder" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM
		GOODS_PAYMENT WHERE MEMBER_ID =#{member_id}
	</select>



	<!-- 멤버관리 -->
	<!-- 멤버 리스트 (미사용) -->
	<select id="getMemberList" resultMap="member">
		select * from member
		order
		by member_no
	</select>
	<!-- 어드민 회원탈 -->
	<delete id="deleteMember">
		DELETE FROM MEMBER WHERE
		MEMBER_NO =
		#{member_no}
	</delete>
	<!-- 어드민 회원 상세보기 -->
	<select id="getMember" resultType="member">
		select * from member
		where member_no=#{member_no}
	</select>
	
	<!-- 어드민 회원 목록 검색 -->
	<sql id="searchCondition">
		<choose>
			<when test='option=="N"'>
				and member_name like '%'||#{keyword}||'%'
			</when>
			<when test='option=="I"'>
				and member_id like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				and member_name like '%'||#{keyword}||'%'
				or member_id like
				'%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	<!-- 어드민 회원 목록 페이징 -->
	<select id="memberPage" parameterType="SearchCondition"
		resultType="member">
		select *
		from (
		select rownum as rn, A.*
		from (
		select *
		from member
		where
		1=1
		<include refid="searchCondition" />
		ORDER BY member_no
		) A
		) where rn between ${offset} and
		${pageSize}*#{page}
		AND member_id!='admin'
	</select>

	<select id="memberCount" parameterType="SearchCondition"
		resultType="int">
		select count(*)
		from member
		where 1=1
		<include refid="searchCondition" />
	</select>

</mapper>
